{
  "BondGeneralVariable": {
    "from_host": {
      "src": "host",
      "dst": ["host", "guest", "arbiter"]
    },
    "from_guest": {
      "src": "guest",
      "dst": ["host", "guest", "arbiter"]
    },
    "from_arbiter": {
      "src": "arbiter",
      "dst": ["host", "guest", "arbiter"]
    }
  },
  "ArbiterAssistAlignVariable": {
    "main_feature_host": {
      "src": "host",
      "dst": ["host", "guest", "arbiter"]
    },
    "main_feature_guest": {
      "src": "guest",
      "dst": ["host", "guest", "arbiter"]
    },
    "aligned_index_for_host": {
      "src": "arbiter",
      "dst": ["host"]
    },
    "aligned_index_for_guest": {
      "src": "arbiter",
      "dst": ["guest"]
    }
  },
  "SumTransferVariable": {
    "encrypted_value_host": {
      "src": "host",
      "dst": ["arbiter"]
    },
    "encrypted_value_guest": {
      "src": "guest",
      "dst": ["arbiter"]
    },
    "encrypted_value_sum": {
      "src": "arbiter",
      "dst": [
        "host",
        "guest"
      ]
    },
    "decrypted_sum_host": {
      "src": "host",
      "dst": [
        "host",
        "guest",
    "arbiter"
      ]
    },
    "decrypted_sum_guest": {
      "src": "guest",
      "dst": [
        "host",
        "guest",
    "arbiter"
      ]
    }
  },
  "DNN1DTransferVariable": {
    "avg_grad": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "host_cand_grad": {
      "src": "host",
      "dst": [
        "guest"
      ]
    },
    "progress": {
      "src": "guest",
      "dst": [
    "host",
    "arbiter"
      ]
    }
  },
  "KeyExchangeVariable": {
    "random_value_host": {
      "src": "host",
      "dst": ["host", "guest"]
    },
    "random_value_guest": {
      "src": "guest",
      "dst": ["host", "guest"]
    }
  },
  "BianjieTransferVariable": {
    "req1": {
      "src": "guest",
      "dst": ["host"]
    },
    "req2": {
      "src": "host",
      "dst": ["guest"]
    },
    "ack1": {
      "src": "guest",
      "dst": ["host"]
    },
    "ack2": {
      "src": "host",
      "dst": ["guest"]
    }
  },
  "RsaIntersectTransferVariable": {
    "rsa_pubkey": {
      "src": "host",
      "dst": [
        "guest"
      ]
    },
    "intersect_guest_ids": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "intersect_host_ids_process": {
      "src": "host",
      "dst": [
        "guest"
      ]
    },
    "intersect_guest_ids_process": {
      "src": "host",
      "dst": [
        "guest"
      ]
    },
    "intersect_ids": {
      "src": "guest",
      "dst": [
        "host"
      ]
    }
  },
  "RawIntersectTransferVariable": {
    "send_ids_host": {
      "src": "host",
      "dst": [
        "guest"
      ]
    },
    "send_ids_guest": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "intersect_ids_host": {
      "src": "host",
      "dst": [
        "guest"
      ]
    },
    "intersect_ids_guest": {
      "src": "guest",
      "dst": [
        "host"
      ]
    }
  },
  "HeteroLRTransferVariable": {
    "paillier_pubkey": {
      "src": "arbiter",
      "dst": [
        "host",
        "guest"
      ]
    },
    "batch_data_index": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "host_forward_dict": {
      "src": "host",
      "dst": [
        "guest"
      ]
    },
    "fore_gradient": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "guest_gradient": {
      "src": "guest",
      "dst": [
        "arbiter"
      ]
    },
    "guest_optim_gradient": {
      "src": "arbiter",
      "dst": [
        "guest"
      ]
    },
    "host_loss_regular": {
      "src": "host",
      "dst": [
        "guest"
      ]
    },
    "loss": {
      "src": "guest",
      "dst": [
        "arbiter"
      ]
    },
    "is_stopped": {
      "src": "arbiter",
      "dst": [
        "host",
        "guest"
      ]
    },
    "batch_info": {
      "src": "guest",
      "dst": [
        "host",
        "arbiter"
      ]
    },
    "host_optim_gradient": {
      "src": "arbiter",
      "dst": [
        "host"
      ]
    },
    "host_gradient": {
      "src": "host",
      "dst": [
        "arbiter"
      ]
    },
    "host_prob": {
      "src": "host",
      "dst": [
        "guest"
      ]
    }
  },
  "HomoLRTransferVariable": {
    "paillier_pubkey": {
      "src": "arbiter",
      "dst": [
        "host"
      ]
    },
    "guest_model": {
      "src": "guest",
      "dst": [
        "arbiter"
      ]
    },
    "host_model": {
      "src": "host",
      "dst": [
        "arbiter"
      ]
    },
    "final_model": {
      "src": "arbiter",
      "dst": [
        "guest",
        "host"
      ]
    },
    "to_encrypt_model": {
      "src": "host",
      "dst": [
        "arbiter"
      ]
    },
    "re_encrypted_model": {
      "src": "arbiter",
      "dst": [
        "host"
      ]
    },
    "re_encrypt_times": {
      "src": "host",
      "dst": [
        "arbiter"
      ]
    },
    "converge_flag": {
      "src": "arbiter",
      "dst": [
        "guest",
        "host"
      ]
    },
    "guest_loss": {
      "src": "guest",
      "dst": [
        "arbiter"
      ]
    },
    "host_loss": {
      "src": "host",
      "dst": [
        "arbiter"
      ]
    },
    "use_encrypt": {
      "src": "host",
      "dst": [
        "arbiter"
      ]
    },
    "guest_party_weight": {
      "src": "guest",
      "dst": [
        "arbiter"
      ]
    },
    "host_party_weight": {
      "src": "host",
      "dst": [
        "arbiter"
      ]
    },
    "predict_wx": {
      "src": "host",
      "dst": [
        "arbiter"
      ]
    },
    "predict_result": {
      "src": "arbiter",
      "dst": [
        "host"
      ]
    }
  },
  "HeteroSecureBoostingTreeTransferVariable": {
    "tree_dim": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "stop_flag": {
      "src": "guest",
      "dst": [
        "host"
      ]
    }
  },
  "HeteroDecisionTreeTransferVariable": {
    "encrypted_grad_and_hess": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "tree_node_queue": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "node_positions": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "encrypted_splitinfo_host": {
      "src": "host",
      "dst": [
        "guest"
      ]
    },
    "federated_best_splitinfo_host": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "final_splitinfo_host": {
      "src": "host",
      "dst": [
        "guest"
      ]
    },
    "dispatch_node_host": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "dispatch_node_host_result": {
      "src": "host",
      "dst": [
        "guest"
      ]
    },
    "tree": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "predict_data": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "predict_data_by_host": {
      "src": "host",
      "dst": [
        "guest"
      ]
    },
    "predict_finish_tag": {
      "src": "guest",
      "dst": [
        "host"
      ]
    }
  },
  "HeteroWorkFlowTransferVariable": {
    "train_data": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "test_data": {
      "src": "guest",
      "dst": [
        "host"
      ]
    }
  },
  "HeteroFTLTransferVariable": {
    "paillier_pubkey": {
      "src": "arbiter",
      "dst": [
        "host",
        "guest"
      ]
    },
    "batch_data_index": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "host_component_list": {
      "src": "host",
      "dst": [
        "guest"
      ]
    },
    "guest_component_list": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "host_precomputed_comp_list": {
      "src": "host",
      "dst": [
        "guest"
      ]
    },
    "guest_precomputed_comp_list": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "encrypt_guest_gradient": {
      "src": "guest",
      "dst": [
        "arbiter"
      ]
    },
    "decrypt_guest_gradient": {
      "src": "arbiter",
      "dst": [
        "guest"
      ]
    },
    "encrypt_host_gradient": {
      "src": "host",
      "dst": [
        "arbiter"
      ]
    },
    "decrypt_host_gradient": {
      "src": "arbiter",
      "dst": [
        "host"
      ]
    },
    "encrypt_loss": {
      "src": "guest",
      "dst": [
        "arbiter"
      ]
    },
    "is_encrypted_ftl_stopped": {
      "src": "arbiter",
      "dst": [
        "host",
        "guest"
      ]
    },
    "is_stopped": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "batch_size": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "batch_num": {
      "src": "guest",
      "dst": [
        "arbiter",
        "host"
      ]
    },
    "host_prob": {
      "src": "host",
      "dst": [
        "guest"
      ]
    },
    "pred_prob": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "encrypt_prob": {
      "src": "guest",
      "dst": [
        "arbiter"
      ]
    },
    "decrypt_prob": {
      "src": "arbiter",
      "dst": [
        "guest"
      ]
    },
    "guest_sample_indexes": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "host_sample_indexes": {
      "src": "host",
      "dst": [
        "guest"
      ]
    },

    "guest_public_key": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "host_public_key": {
      "src": "host",
      "dst": [
        "guest"
      ]
    },
    "masked_enc_guest_gradients": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "masked_enc_host_gradients": {
      "src": "host",
      "dst": [
        "guest"
      ]
    },
    "masked_dec_guest_gradients": {
      "src": "host",
      "dst": [
        "guest"
      ]
    },
    "masked_dec_host_gradients": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "masked_enc_loss": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "masked_dec_loss": {
      "src": "host",
      "dst": [
        "guest"
      ]
    },
    "is_decentralized_enc_ftl_stopped": {
      "src": "guest",
      "dst": [
        "host"
      ]
    }
  },
  "HeteroDNNLRTransferVariable": {
    "guest_dec_gradient": {
      "src": "arbiter",
      "dst": [
        "guest"
      ]
    },
    "guest_enc_gradient": {
      "src": "guest",
      "dst": [
        "arbiter"
      ]
    },
    "host_dec_gradient": {
      "src": "arbiter",
      "dst": [
        "host"
      ]
    },
    "host_enc_gradient": {
      "src": "host",
      "dst": [
        "arbiter"
      ]
    }
  },
  "HeteroFeatureBinningTransferVariable": {
    "paillier_pubkey": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "encrypted_label": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "encrypted_bin_sum": {
      "src": "host",
      "dst": [
        "guest"
      ]
    }
  },
  "HeteroFeatureSelectionTransferVariable": {
    "result_left_cols": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "host_select_cols": {
      "src": "host",
      "dst": [
        "guest"
      ]
    }
  },
  "SecureAddExampleTransferVariable": {
    "guest_share": {
      "src": "guest",
      "dst": [
        "host"
      ]
    },
    "host_share": {
      "src": "host",
      "dst": [
        "guest"
      ]
    },
	"host_sum": {
	  "src": "host",
	  "dst": [
	    "guest"
	  ]
	}
  },
  "SampleTransferVariable": {
    "sample_ids": {
      "src": "guest",
      "dst": [
          "host"
      ]
    }
  },
  "OneVsRestTransferVariable": {
    "host_classes": {
      "src": "host",
      "dst": [
        "guest"
      ]
    },
    "aggregate_classes":{
      "src": "guest",
      "dst": [
        "host",
        "arbiter"
      ]
    }
  },
  "SampleAlign2HiveVariable": {
    "sample": {
      "src": "guest",
      "dst": [
          "host"
      ]
    },
    "aligned_sample": {
      "src": "host",
      "dst": [
          "guest"
      ]
    },
    "schema": {
      "src": "guest",
      "dst": [
          "host"
      ]
    }
  },
  "SecureBoostTransferVariable": {
    "grad_and_hess": {
      "src": "guest",
      "dst": [
	  "host"
      ]
    }, 

    "tree_node_queue": {
      "src": "guest",
      "dst": [
          "host"
      ]
    },

  "node_positions": {
      "src": "guest",
      "dst": [
          "host"
      ]
    },

  "node_grad_hess_host": {
      "src": "host",
      "dst": [
          "guest"
      ]
    },

  "federated_best_splitinfo_host": {
      "src": "guest",
      "dst": [
          "host"
      ]
    },

  "final_splitinfos_host":{
      "src": "host",
      "dst": [
          "guest"
      ]
    },

  "trees": {
      "src": "guest",
      "dst": [
          "host"
      ]
    },

  "predict_data": {
      "src": "guest",
      "dst": [
          "host"
      ]
    },

  "finish_tag": {
      "src": "guest",
      "dst": [
          "host"
      ]
    },

  "predict_data_host": {
      "src": "host",
      "dst": [
          "guest"
      ]
    },

  "dispatch_node2host": {
      "src": "guest",
      "dst": [
          "host"
      ]
    },

  "dispatch_node2guest": {
      "src": "host",
      "dst": [
          "guest"
      ]
    },

  "sample_index": {
      "src": "guest",
      "dst": [
          "host"
      ]
    }
  },
  "Horizon_LRTransferVariable": {
    "feature_length": {
        "src": "guest",
        "dst": [
            "arbiter"
        ]
    },
    "data_length": {
        "src": "guest",
        "dst": [
            "arbiter"
        ]
    },
    "batch_size": {
        "src": "guest",
        "dst": [
            "arbiter"
        ]
    },
    "dynamic_batch_size": {
        "src": "arbiter",
        "dst": [
            "guest"
        ]
    },
    "W2arbiter": {
        "src": "guest",
        "dst": [
            "arbiter"
        ]
    },
    "B2arbiter" : {
        "src": "guest",
        "dst": [
            "arbiter"
        ]
    },
    "W2guest": {
        "src": "arbiter",
        "dst": [
            "guest"
        ]
    },
    "B2guest": {
        "src": "arbiter",
        "dst": [
            "guest"
        ]
    }
  }
}

